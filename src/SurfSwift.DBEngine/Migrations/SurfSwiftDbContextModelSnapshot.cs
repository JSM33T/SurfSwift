// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SurfSwift.DBEngine.Context;

#nullable disable

namespace SurfSwift.DBEngine.Migrations
{
    [DbContext(typeof(SurfSwiftDbContext))]
    partial class SurfSwiftDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SurfSwift.DBEngine.Models.ActionProject", b =>
                {
                    b.Property<int>("ActionProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActionProjectId"));

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ActionProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("tblActionProject", (string)null);
                });

            modelBuilder.Entity("SurfSwift.DBEngine.Models.ActionTemplate", b =>
                {
                    b.Property<int>("ActionTemplateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActionTemplateId"));

                    b.Property<string>("ActionJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ActionProjectId")
                        .HasColumnType("int");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<string>("TemplateName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ActionTemplateId");

                    b.HasIndex("ActionProjectId");

                    b.ToTable("tblActionTemplate", (string)null);
                });

            modelBuilder.Entity("SurfSwift.DBEngine.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<bool>("IsValidUser")
                        .HasColumnType("bit");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("tblUser", (string)null);
                });

            modelBuilder.Entity("SurfSwift.DBEngine.Models.ActionProject", b =>
                {
                    b.HasOne("SurfSwift.DBEngine.Models.User", "User")
                        .WithMany("Project")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SurfSwift.DBEngine.Models.ActionTemplate", b =>
                {
                    b.HasOne("SurfSwift.DBEngine.Models.ActionProject", "Project")
                        .WithMany("Template")
                        .HasForeignKey("ActionProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("SurfSwift.DBEngine.Models.ActionProject", b =>
                {
                    b.Navigation("Template");
                });

            modelBuilder.Entity("SurfSwift.DBEngine.Models.User", b =>
                {
                    b.Navigation("Project");
                });
#pragma warning restore 612, 618
        }
    }
}
